

import React, { useRef, useState } from 'react';
import Listas from './Listas';
import Entradas from './Entradas';
import Reservas from './Reservas';
import CRM from './CRM';
import Roles from './Roles';
import Web from './Web';
import Reporting from './Reporting';
import ControlDeAforo from './ControlDeAforo';

interface Props {
  componentState: any;
  setComponentState: any;
}

const TabsGeneral: React.FC<Props> = ({ componentState, setComponentState }) => {
  const [selectedTab, setSelectedTab] = useState<string>('Entradas');

  const handleTabChange = (tab: string) => {
    setSelectedTab(tab);
  };

  const scrollableContainerRef = useRef<HTMLDivElement>(null);

  const handleScrollLeft = () => {
    if (scrollableContainerRef.current) {
      scrollableContainerRef.current.scrollLeft -= 100; // Ajusta el valor segÃºn tu preferencia
    }
  };

  const handleScrollRight = () => {
    if (scrollableContainerRef.current) {
      scrollableContainerRef.current.scrollLeft += 100;
    }
  };

  const ListasIcon = (selected: boolean) => (
    
    <svg
    className={`h-8 w-8 fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
<path d="M26.9376 9.86879C26.9389 8.16863 26.501 6.49695 25.6663 5.01581C24.8315 3.53466 23.6283 2.29429 22.1732 1.41492C20.7181 0.535545 19.0605 0.0470005 17.3611 -0.00335934C15.6617 -0.0537192 13.9781 0.335813 12.4735 1.12748C10.9689 1.91915 9.69432 3.0861 8.77335 4.51521C7.85237 5.94433 7.31622 7.58714 7.21687 9.2844C7.11751 10.9817 7.45832 12.6758 8.20627 14.2026C8.95421 15.7294 10.0839 17.0371 11.4859 17.9989C8.13325 19.1637 5.22624 21.343 3.1681 24.2344C1.10996 27.1259 0.00272768 30.5863 0 34.1355H2.66667C2.67118 30.3177 4.18977 26.6577 6.88932 23.9581C9.58886 21.2586 13.2489 19.74 17.0667 19.7355C19.6832 19.7332 22.1919 18.6931 24.0425 16.8433C25.893 14.9936 26.9342 12.4853 26.9376 9.86879ZM17.0667 17.0688C15.6426 17.0688 14.2506 16.6465 13.0666 15.8554C11.8825 15.0642 10.9597 13.9397 10.4147 12.6241C9.86978 11.3085 9.7272 9.86081 10.005 8.46414C10.2828 7.06748 10.9686 5.78456 11.9755 4.77762C12.9824 3.77069 14.2654 3.08495 15.662 2.80714C17.0587 2.52932 18.5064 2.67191 19.822 3.21686C21.1376 3.76181 22.2621 4.68465 23.0532 5.86869C23.8444 7.05272 24.2667 8.44477 24.2667 9.86879C24.2644 11.7777 23.5051 13.6077 22.1553 14.9575C20.8056 16.3072 18.9755 17.0665 17.0667 17.0688Z"/>
<path d="M28.6026 25.8709V20.2709H25.9359V25.8709H20.3359V28.5376H25.9359V34.1376H28.6026V28.5376H34.2026V25.8709H28.6026Z"/>
</svg>



  );

  const EntradasIcon = (selected: boolean) => (
    <svg
    className={`h-8 w-8 fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
<path d="M28.0416 8.0144L27.3792 8.6768C26.8372 9.19418 26.1143 9.47897 25.365 9.47026C24.6158 9.46155 23.8996 9.16004 23.3698 8.6302C22.84 8.10036 22.5384 7.38425 22.5297 6.63499C22.521 5.88574 22.8058 5.16281 23.3232 4.6208L23.9856 3.9584L20.0288 0L0 20.0288L3.9584 23.9872L4.6208 23.3248C5.16281 22.8074 5.88574 22.5226 6.63499 22.5313C7.38425 22.54 8.10036 22.8416 8.6302 23.3714C9.16004 23.9012 9.46155 24.6174 9.47026 25.3666C9.47897 26.1159 9.19418 26.8388 8.6768 27.3808L8.0144 28.0432L11.9712 32L32 11.9712L28.0416 8.0144ZM10.6 27.9776C11.2051 27.065 11.4759 25.9712 11.3667 24.8816C11.2574 23.7921 10.7747 22.7739 10.0004 21.9996C9.22612 21.2253 8.2079 20.7426 7.11837 20.6333C6.02883 20.5241 4.93503 20.7949 4.0224 21.4L2.6512 20.0288L20.0272 2.6528L21.3984 4.024C20.7933 4.93663 20.5225 6.03043 20.6317 7.11997C20.741 8.2095 21.2237 9.22772 21.998 10.002C22.7723 10.7763 23.7905 11.259 24.88 11.3683C25.9696 11.4775 27.0634 11.2067 27.976 10.6016L29.3472 11.9728L11.9712 29.3472L10.6 27.9776Z"/>
<path d="M18.6853 11.9845L17.3594 13.3104L18.691 14.642L20.017 13.3161L18.6853 11.9845Z"/>
<path d="M16.0213 9.32046L14.6953 10.6464L16.0269 11.978L17.3529 10.6521L16.0213 9.32046Z"/>
<path d="M21.3494 14.6468L20.0234 15.9728L21.3551 17.3044L22.681 15.9784L21.3494 14.6468Z"/>
          </svg>
  );

  const ReservasIcon = (selected: boolean) => (
    <svg
    className={`h-8 w-8 fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >

<path d="M31.0354 29.4908H30.3147L29.5019 25.4223C29.4478 25.1509 29.3227 24.9099 29.1465 24.7378C28.9703 24.5656 28.7532 24.4722 28.5298 24.4724H25.0213V22.5892H28.0298C28.289 22.5768 28.5342 22.4392 28.7141 22.2052C28.8939 21.9713 28.9944 21.6592 28.9944 21.3345C28.9944 21.0098 28.8939 20.6978 28.7141 20.4639C28.5342 20.23 28.289 20.0924 28.0298 20.08V19.4522C28.0263 15.6769 26.8918 12.0404 24.8503 9.26168C22.8089 6.48293 20.0091 4.76402 17.0043 4.44464V2.51011H18.5086C18.6434 2.51656 18.7779 2.48888 18.904 2.42873C19.03 2.36859 19.1451 2.27722 19.2423 2.16008C19.3395 2.04294 19.4169 1.90248 19.4697 1.74705C19.5225 1.59162 19.5497 1.42445 19.5497 1.25554C19.5497 1.08663 19.5225 0.919464 19.4697 0.764035C19.4169 0.608606 19.3395 0.468082 19.2423 0.350946C19.1451 0.23381 19.03 0.142437 18.904 0.0822929C18.7779 0.0221483 18.6434 -0.00553283 18.5086 0.000915037H13.4973C13.3624 -0.00553283 13.228 0.0221483 13.1019 0.0822929C12.9758 0.142437 12.8607 0.23381 12.7635 0.350946C12.6663 0.468082 12.589 0.608606 12.5362 0.764035C12.4834 0.919464 12.4561 1.08663 12.4561 1.25554C12.4561 1.42445 12.4834 1.59162 12.5362 1.74705C12.589 1.90248 12.6663 2.04294 12.7635 2.16008C12.8607 2.27722 12.9758 2.36859 13.1019 2.42873C13.228 2.48888 13.3624 2.51656 13.4973 2.51011H15.0015V4.44464C11.9967 4.76402 9.19696 6.48293 7.15552 9.26168C5.11407 12.0404 3.97951 15.6769 3.97605 19.4522V20.08C3.71689 20.0924 3.47164 20.23 3.29179 20.4639C3.11194 20.6978 3.01148 21.0098 3.01148 21.3345C3.01148 21.6592 3.11194 21.9713 3.29179 22.2052C3.47164 22.4392 3.71689 22.5768 3.97605 22.5892H6.97875V24.4724H3.47024C3.24677 24.4722 3.02968 24.5656 2.85352 24.7378C2.67735 24.9099 2.55224 25.1509 2.49808 25.4223L1.68528 29.4908H0.964567C0.705412 29.5032 0.460176 29.6408 0.280326 29.8747C0.100476 30.1087 0 30.4207 0 30.7454C0 31.0701 0.100476 31.3821 0.280326 31.6161C0.460176 31.85 0.705412 31.9876 0.964567 32H31.0354C31.2946 31.9876 31.5398 31.85 31.7197 31.6161C31.8995 31.3821 32 31.0701 32 30.7454C32 30.4207 31.8995 30.1087 31.7197 29.8747C31.5398 29.6408 31.2946 29.5032 31.0354 29.4908ZM5.97589 19.4522C5.97589 16.1239 7.032 12.9318 8.91189 10.5783C10.7918 8.22479 13.3414 6.90256 16 6.90256C18.6586 6.90256 21.2082 8.22479 23.0881 10.5783C24.968 12.9318 26.0241 16.1239 26.0241 19.4522V20.08H5.97589V19.4522ZM8.98298 22.5892H23.017V24.4724H8.98298V22.5892ZM3.75092 29.4908L4.25234 26.9816H27.7462L28.2476 29.4908H3.75092Z"/>
          </svg>
  );

  const CrmIcon = (selected: boolean) => (
    <svg
    className={`h-8 w-8 fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
<path d="M0.00188515 21.6264C0.00202452 21.7852 0.0424204 21.9413 0.119292 22.0802C0.196163 22.219 0.306996 22.3361 0.441417 22.4205L15.4958 31.8572C15.6449 31.9505 15.8173 32 15.9932 32C16.1691 32 16.3414 31.9505 16.4905 31.8572L31.5449 22.4205C31.6799 22.3362 31.7912 22.2189 31.8684 22.0796C31.9455 21.9404 31.986 21.7838 31.986 21.6246C31.986 21.4654 31.9455 21.3088 31.8684 21.1696C31.7912 21.0304 31.6799 20.9131 31.5449 20.8287L28.2956 18.8239L31.5503 16.7977C31.6876 16.7139 31.8011 16.5962 31.8799 16.4559C31.9586 16.3156 32 16.1574 32 15.9964C32 15.8355 31.9586 15.6773 31.8799 15.537C31.8011 15.3967 31.6876 15.279 31.5503 15.1952L28.2956 13.1993L31.5503 11.1731C31.6849 11.0886 31.7958 10.9714 31.8727 10.8324C31.9496 10.6933 31.9899 10.537 31.9899 10.3781C31.9899 10.2191 31.9496 10.0628 31.8727 9.92377C31.7958 9.78472 31.6849 9.66749 31.5503 9.58307L16.4888 0.142839C16.3396 0.0494975 16.1673 0 15.9914 0C15.8155 0 15.6432 0.0494975 15.494 0.142839L0.439637 9.57951C0.305069 9.66392 0.194135 9.78116 0.117238 9.92021C0.0403403 10.0593 0 10.2156 0 10.3745C0 10.5334 0.0403403 10.6897 0.117238 10.8288C0.194135 10.9678 0.305069 11.0851 0.439637 11.1695L3.67295 13.1797L0.441417 15.2059C0.306457 15.2902 0.195161 15.4075 0.118001 15.5468C0.0408422 15.686 0.000357537 15.8426 0.000357537 16.0018C0.000357537 16.161 0.0408422 16.3176 0.118001 16.4568C0.195161 16.596 0.306457 16.7133 0.441417 16.7977L3.67295 18.8096L0.441417 20.8358C0.307505 20.9199 0.196993 21.0364 0.12015 21.1746C0.0433064 21.3128 0.00262491 21.4682 0.00188515 21.6264ZM15.9941 2.04086L29.2797 10.37L15.9923 18.6476L2.70669 10.3736L15.9941 2.04086ZM5.44531 14.2872L15.4976 20.5474C15.6461 20.6397 15.8175 20.6886 15.9923 20.6886C16.1671 20.6886 16.3385 20.6397 16.487 20.5474L26.5161 14.305L29.2726 16.0053L15.9923 24.2722L2.70847 16L5.44531 14.2872ZM5.44531 19.9118L15.4976 26.1774C15.6461 26.2696 15.8175 26.3185 15.9923 26.3185C16.1671 26.3185 16.3385 26.2696 16.487 26.1774L26.5161 19.9296L29.2761 21.6317L15.9923 29.9591L2.70314 21.6282L5.44531 19.9118Z"/>
          </svg>
  );
  const RolesIcon = (selected: boolean) => (
    <svg
    className={`h-8 w-8 fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
<path d="M31.898 13.6709L31.778 3.98891C31.774 3.75879 31.6864 3.53689 31.5298 3.36038C31.3733 3.18388 31.1572 3.06344 30.9177 3.01924C25.9239 3.04555 20.9837 2.04703 16.4398 0.092874C16.3006 0.0323287 16.1492 0.000976562 15.9959 0.000976562C15.8426 0.000976562 15.6911 0.0323287 15.5519 0.092874C11.0376 2.04837 6.12135 3.03968 1.15404 2.99603C0.87283 2.99603 0.603138 3.10139 0.404294 3.28895C0.20545 3.47651 0.09375 3.7309 0.09375 3.99616V13.6796C0.0979423 17.9594 1.65626 22.1087 4.50922 25.4366C7.36217 28.7645 11.3376 31.0701 15.7735 31.9695C15.9201 31.9991 16.0716 31.9991 16.2182 31.9695C20.6572 31.0694 24.635 28.7613 27.4883 25.4298C30.3416 22.0984 31.898 17.945 31.898 13.6622V13.6709ZM15.9966 29.975C12.0902 29.1196 8.60407 27.0456 6.10278 24.0888C3.60149 21.1319 2.2314 17.4653 2.21434 13.6825V4.99338C6.96643 4.89866 11.6512 3.91431 15.9966 2.0975C20.309 3.89999 24.9558 4.88305 29.6712 4.99048L29.7789 13.6883C29.7608 17.4704 28.3903 21.136 25.8891 24.0919C23.3878 27.0479 19.9023 29.1213 15.9966 29.9765V29.975Z"/>
<path d="M21.303 13.0006H20.2426V11.501C20.2534 10.9693 20.1516 10.441 19.9433 9.94679C19.7351 9.45262 19.4244 9.00255 19.0296 8.62295C18.6347 8.24334 18.1636 7.9418 17.6438 7.73595C17.1239 7.5301 16.5658 7.42407 16.002 7.42407C15.4382 7.42407 14.8801 7.5301 14.3602 7.73595C13.8404 7.9418 13.3693 8.24334 12.9744 8.62295C12.5796 9.00255 12.2689 9.45262 12.0606 9.94679C11.8523 10.441 11.7506 10.9693 11.7613 11.501V13.0006H10.701C10.5617 13.0006 10.4238 13.0265 10.2952 13.0767C10.1665 13.127 10.0497 13.2007 9.95119 13.2936C9.85272 13.3864 9.77462 13.4967 9.72134 13.6181C9.66805 13.7394 9.64062 13.8695 9.64062 14.0008V22.0009C9.64062 22.1322 9.66805 22.2623 9.72134 22.3836C9.77462 22.505 9.85272 22.6153 9.95119 22.7081C10.0497 22.801 10.1665 22.8747 10.2952 22.925C10.4238 22.9752 10.5617 23.0011 10.701 23.0011H21.303C21.4423 23.0011 21.5801 22.9752 21.7088 22.925C21.8374 22.8747 21.9543 22.801 22.0528 22.7081C22.1513 22.6153 22.2294 22.505 22.2826 22.3836C22.3359 22.2623 22.3634 22.1322 22.3634 22.0009V14.0008C22.3634 13.8695 22.3359 13.7394 22.2826 13.6181C22.2294 13.4967 22.1513 13.3864 22.0528 13.2936C21.9543 13.2007 21.8374 13.127 21.7088 13.0767C21.5801 13.0265 21.4423 13.0006 21.303 13.0006ZM13.882 11.501C13.882 10.9705 14.1055 10.4617 14.5032 10.0866C14.9009 9.71142 15.4403 9.50068 16.0028 9.50068C16.5652 9.50068 17.1046 9.71142 17.5023 10.0866C17.9 10.4617 18.1235 10.9705 18.1235 11.501V13.0006H13.882V11.501ZM20.2426 21.0022H11.7613V15.0025H20.2426V21.0022Z"/>
<path d="M15.9978 16.5001C15.8586 16.5001 15.7207 16.526 15.5921 16.5762C15.4634 16.6265 15.3465 16.7002 15.2481 16.793C15.1496 16.8859 15.0715 16.9962 15.0182 17.1175C14.9649 17.2389 14.9375 17.369 14.9375 17.5003V18.5005C14.9375 18.7658 15.0492 19.0201 15.2481 19.2077C15.4469 19.3953 15.7166 19.5007 15.9978 19.5007C16.2791 19.5007 16.5488 19.3953 16.7477 19.2077C16.9465 19.0201 17.0582 18.7658 17.0582 18.5005V17.5003C17.0582 17.369 17.0308 17.2389 16.9775 17.1175C16.9242 16.9962 16.8461 16.8859 16.7477 16.793C16.6492 16.7002 16.5323 16.6265 16.4036 16.5762C16.275 16.526 16.1371 16.5001 15.9978 16.5001Z"/>
</svg>
  );
  const WebIcon = (selected: boolean) => (
    <svg
    className={`h-8 w-8  fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
<path d="M27.3211 4.69375C24.7052 2.07442 21.262 0.443208 17.5782 0.0780556C13.8944 -0.287097 10.198 0.636405 7.11879 2.69121C4.03959 4.74602 1.76817 7.80496 0.691581 11.3468C-0.385007 14.8887 -0.200147 18.6942 1.21467 22.115C2.62948 25.5359 5.18669 28.3602 8.45056 30.1069C11.7144 31.8536 15.483 32.4145 19.114 31.694C22.7451 30.9735 26.014 29.0162 28.3637 26.1557C30.7133 23.2952 31.9984 19.7084 31.9999 16.0065C32.0065 13.9052 31.5963 11.8235 30.7932 9.88166C29.9901 7.93986 28.81 6.17657 27.3211 4.69375ZM27.1874 24.4234C26.2386 23.7813 25.2362 23.2222 24.1913 22.7524C24.6639 20.873 24.9317 18.9479 24.99 17.0108H29.9713C29.781 19.7002 28.8138 22.2765 27.1874 24.4268V24.4234ZM2.04533 17.0075H7.02661C7.08515 18.9445 7.35296 20.8696 7.82537 22.7491C6.78047 23.2189 5.77804 23.778 4.82924 24.4201C3.2028 22.2698 2.23569 19.6935 2.04533 17.0041V17.0075ZM4.82757 7.59128C5.77635 8.23344 6.77877 8.79252 7.8237 9.26229C7.3511 11.1417 7.08328 13.0668 7.02494 15.0039H2.04366C2.23372 12.3147 3.20023 9.73852 4.8259 7.58794L4.82757 7.59128ZM22.5403 4.93103C22.1971 4.28106 21.8014 3.66018 21.3572 3.07454C23.0376 3.77589 24.5654 4.79746 25.8556 6.08235C25.1339 6.55675 24.3789 6.97839 23.5964 7.34398C23.3035 6.51774 22.9506 5.71407 22.5403 4.93939V4.93103ZM21.7315 8.08089C18.0127 9.31674 13.9939 9.31674 10.2751 8.08089C11.5534 4.43974 13.6672 2.00843 16.0033 2.00843C18.3394 2.00843 20.4532 4.44141 21.7315 8.08089ZM9.0218 15.0073C9.07996 13.3175 9.30895 11.6379 9.70526 9.99421C13.796 11.337 18.2089 11.337 22.2997 9.99421C22.696 11.6379 22.925 13.3175 22.9831 15.0073H9.0218ZM22.9831 17.0125C22.9249 18.7023 22.6959 20.3818 22.2997 22.0255C18.209 20.6822 13.7959 20.6822 9.70526 22.0255C9.30904 20.3818 9.08005 18.7023 9.0218 17.0125H22.9831ZM9.46295 4.93605C9.05283 5.71079 8.69987 6.51446 8.40688 7.34064C7.62444 6.97499 6.86942 6.55334 6.14767 6.07901C7.43784 4.79412 8.96568 3.77255 10.646 3.0712C10.2019 3.65684 9.80618 4.27772 9.46295 4.92769V4.93605ZM8.40688 24.6858C8.69938 25.5119 9.05178 26.3156 9.46128 27.0904C9.80451 27.7403 10.2002 28.3612 10.6444 28.9469C8.96483 28.2477 7.43709 27.2291 6.14599 25.9474C6.86766 25.4729 7.62438 25.0513 8.40688 24.6858ZM10.2717 23.9405C13.9906 22.7047 18.0094 22.7047 21.7282 23.9405C20.4499 27.5817 18.336 30.013 16 30.013C13.6639 30.013 11.5501 27.5817 10.2717 23.9405ZM22.5386 27.0904C22.9488 26.3157 23.3018 25.512 23.5947 24.6858C24.3772 25.0513 25.1323 25.4729 25.8539 25.9474C24.5628 27.2291 23.0351 28.2477 21.3556 28.9469C21.7997 28.3612 22.1954 27.7403 22.5386 27.0904ZM24.9817 15.0139C24.9232 13.0769 24.6554 11.1518 24.1829 9.27234C25.2278 8.80257 26.2303 8.24349 27.1791 7.60132C28.8047 9.75191 29.7712 12.3281 29.9613 15.0173L24.9817 15.0139Z"/>
</svg>
  );
  const ReportingIcon = (selected: boolean) => (
    <svg
    className={`h-8 w-8 fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
<path d="M18.9794 31.9917H13.0405C12.8018 31.9917 12.5729 31.8979 12.4042 31.7311C12.2354 31.5642 12.1406 31.338 12.1406 31.102V19.5667C12.1406 19.3307 12.2354 19.1044 12.4042 18.9376C12.5729 18.7707 12.8018 18.677 13.0405 18.677H18.9794C19.218 18.677 19.4469 18.7707 19.6157 18.9376C19.7844 19.1044 19.8792 19.3307 19.8792 19.5667V31.102C19.8792 31.338 19.7844 31.5642 19.6157 31.7311C19.4469 31.8979 19.218 31.9917 18.9794 31.9917ZM13.9403 30.2124H18.0795V20.4581H13.9403V30.2124Z"/>
<path d="M30.7816 31.9917H24.7905C24.5518 31.9917 24.3229 31.8979 24.1542 31.7311C23.9854 31.5643 23.8906 31.338 23.8906 31.102V12.5739C23.8906 12.338 23.9854 12.1117 24.1542 11.9449C24.3229 11.778 24.5518 11.6843 24.7905 11.6843H30.7816C31.0202 11.6843 31.2491 11.778 31.4179 11.9449C31.5866 12.1117 31.6814 12.338 31.6814 12.5739V31.102C31.6814 31.338 31.5866 31.5643 31.4179 31.7311C31.2491 31.8979 31.0202 31.9917 30.7816 31.9917ZM25.6921 30.2123H29.8818V13.4654H25.6903L25.6921 30.2123Z"/>
<path d="M7.21907 31.9917H1.22796C0.98931 31.9917 0.760433 31.898 0.59168 31.7311C0.422928 31.5643 0.328125 31.3379 0.328125 31.102V23.8869C0.328125 23.6509 0.422928 23.4246 0.59168 23.2578C0.760433 23.0909 0.98931 22.9972 1.22796 22.9972H7.21907C7.45772 22.9972 7.6866 23.0909 7.85535 23.2578C8.0241 23.4246 8.1189 23.6509 8.1189 23.8869V31.102C8.1189 31.3379 8.0241 31.5643 7.85535 31.7311C7.6866 31.898 7.45772 31.9917 7.21907 31.9917ZM2.1296 30.2123H6.31923V24.7783H2.1278L2.1296 30.2123Z"/>
<path d="M0.910407 13.6415C0.780924 13.6467 0.652053 13.6212 0.534619 13.567C0.417184 13.5128 0.314615 13.4316 0.235529 13.3301C0.076523 13.158 -0.0078396 12.9311 0.000573948 12.6982C0.00898749 12.4653 0.109508 12.245 0.280523 12.0845L8.6598 4.15766C8.81748 4.01304 9.02234 3.92903 9.23726 3.92087C9.45218 3.91271 9.66296 3.98093 9.83139 4.11318L17.9821 10.4351L30.1893 0.994029C30.2838 0.92393 30.3914 0.872924 30.5059 0.843929C30.6203 0.814933 30.7395 0.808523 30.8565 0.825046C30.9734 0.841568 31.086 0.880706 31.1877 0.940231C31.2893 0.999756 31.3782 1.07849 31.4491 1.17196C31.5972 1.35522 31.6662 1.58893 31.6409 1.82219C31.6156 2.05546 31.4981 2.26942 31.3141 2.41749L18.522 12.2607C18.3623 12.3875 18.1636 12.4566 17.9587 12.4566C17.7539 12.4566 17.5552 12.3875 17.3954 12.2607L9.34367 5.98147L1.54209 13.3692C1.46005 13.4534 1.36204 13.5208 1.25365 13.5675C1.14526 13.6142 1.02863 13.6393 0.910407 13.6415Z"/>
<path d="M30.5099 9.8551H30.4649C30.2297 9.8329 30.0115 9.72458 29.853 9.55141C29.6945 9.37824 29.6072 9.15272 29.6083 8.91917L30.1482 2.28231L22.8505 1.79299C22.6118 1.7753 22.3901 1.66459 22.234 1.48523C22.0779 1.30587 22.0003 1.07256 22.0182 0.836609C22.0361 0.600657 22.148 0.381389 22.3294 0.227058C22.5108 0.0727275 22.7468 -0.00402623 22.9855 0.0136702L31.1848 0.591944C31.2997 0.597156 31.4119 0.627857 31.5131 0.681758C31.6144 0.735658 31.702 0.811384 31.7697 0.903331C31.8553 0.981391 31.9206 1.07884 31.9597 1.18731C31.9989 1.29578 32.0109 1.41204 31.9946 1.52609L31.4098 9.05262C31.3878 9.27315 31.2834 9.47765 31.1169 9.62607C30.9505 9.77449 30.7341 9.85616 30.5099 9.8551Z"/>
        

</svg>
  );

  const ControlAforoIcon = (selected: boolean) => (
    <svg
    className={`h-8 w-8 fill-current ${
      selected ? 'md:text-white text-[#6096B9] ' : 'md:text-[#E5E7EB] text-gray-500'
    }`}
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
<path d="M3.375 3.75C3.375 2.75544 3.65156 1.80161 4.14384 1.09835C4.63613 0.395088 5.30381 0 6 0C6.69619 0 7.36387 0.395088 7.85616 1.09835C8.34844 1.80161 8.625 2.75544 8.625 3.75C8.625 4.74456 8.34844 5.69839 7.85616 6.40165C7.36387 7.10491 6.69619 7.5 6 7.5C5.30381 7.5 4.63613 7.10491 4.14384 6.40165C3.65156 5.69839 3.375 4.74456 3.375 3.75ZM3 14.3103C2.53125 15.0603 2.25 16.058 2.25 17.1429C2.25 18.2277 2.53125 19.2254 3 19.9754V14.3036V14.3103ZM9.76875 11.0089C8.37656 12.7701 7.5 15.3482 7.5 18.2143C7.5 20.5112 8.0625 22.6205 9 24.2746V25.7143C9 26.8996 8.32969 27.8571 7.5 27.8571H4.5C3.67031 27.8571 3 26.8996 3 25.7143V23.9196C1.22813 22.7143 0 20.1362 0 17.1429C0 12.9978 2.34844 9.64286 5.25 9.64286H6.75C7.875 9.64286 8.91562 10.1451 9.76875 11.0022V11.0089ZM21 25.7143V24.2746C21.9375 22.6205 22.5 20.5112 22.5 18.2143C22.5 15.3482 21.6234 12.7701 20.2313 11.0022C21.0844 10.1451 22.125 9.64286 23.25 9.64286H24.75C27.6516 9.64286 30 12.9978 30 17.1429C30 20.1362 28.7719 22.7143 27 23.9196V25.7143C27 26.8996 26.3297 27.8571 25.5 27.8571H22.5C21.6703 27.8571 21 26.8996 21 25.7143ZM21.375 3.75C21.375 2.75544 21.6516 1.80161 22.1438 1.09835C22.6361 0.395088 23.3038 0 24 0C24.6962 0 25.3639 0.395088 25.8562 1.09835C26.3484 1.80161 26.625 2.75544 26.625 3.75C26.625 4.74456 26.3484 5.69839 25.8562 6.40165C25.3639 7.10491 24.6962 7.5 24 7.5C23.3038 7.5 22.6361 7.10491 22.1438 6.40165C21.6516 5.69839 21.375 4.74456 21.375 3.75ZM27 14.3103V19.9821C27.4688 19.2254 27.75 18.2344 27.75 17.1496C27.75 16.0647 27.4688 15.067 27 14.317V14.3103ZM15 0C15.7956 0 16.5587 0.451529 17.1213 1.25526C17.6839 2.05898 18 3.14907 18 4.28571C18 5.42236 17.6839 6.51244 17.1213 7.31617C16.5587 8.1199 15.7956 8.57143 15 8.57143C14.2044 8.57143 13.4413 8.1199 12.8787 7.31617C12.3161 6.51244 12 5.42236 12 4.28571C12 3.14907 12.3161 2.05898 12.8787 1.25526C13.4413 0.451529 14.2044 0 15 0ZM11.25 18.2143C11.25 19.2991 11.5312 20.2902 12 21.0469V15.375C11.5312 16.1317 11.25 17.1228 11.25 18.2076V18.2143ZM18 15.3817V21.0536C18.4688 20.2969 18.75 19.3058 18.75 18.221C18.75 17.1362 18.4688 16.1384 18 15.3884V15.3817ZM21 18.2143C21 21.2076 19.7719 23.7857 18 24.9911V27.8571C18 29.0424 17.3297 30 16.5 30H13.5C12.6703 30 12 29.0424 12 27.8571V24.9911C10.2281 23.7857 9 21.2076 9 18.2143C9 14.0692 11.3484 10.7143 14.25 10.7143H15.75C18.6516 10.7143 21 14.0692 21 18.2143Z"/>
</svg>
  );


  return (
    <main className="w-full flex flex-col items-center justify-start py-0 gap-6 box-border shrink-0">
      <div className='w-full flex-col items-center justify-center gap-0 md:block hidden'>
      <div className='w-[100%] border-t-[10px] border-[#284C77]'/>
            <div className="w-auto flex items-center max-w-full max-h-full justify-center">
            <svg width="1072" height="82" viewBox="0 0 1072 82" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M0.000305176 0C17.6569 4.36173 30.7781 20.6266 30.7781 40.017C30.7781 62.7478 48.8097 81.1835 71.0413 81.1835H1000.2C1022.44 81.1835 1040.47 62.7478 1040.47 40.017C1040.47 20.6266 1053.59 4.36173 1071.25 0H0.000305176Z" fill="#284C77"/>
</svg>


      </div>
      </div>
      {/* botones del scroll con svg */}
      <div className='md:!m-[0] md:w-auto md:absolute md:top-[95px] md:left-[] w-full h-auto flex flex-row md:items-center md:justify-center items-center justify-between md:space-x-2 md:z-50'>
      {/* izquierda */}
      <button
        className="w-5 h-5 rounded-full border-[1px] border-gray-400 text-gray-600 md:hidden"
        onClick={handleScrollLeft}
      >
        <svg data-slot="icon" fill="none" stroke-width="1.5" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
  <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5"></path>
</svg>
      </button>
      <div className="md:!m-[0] md:absolute md:top-[1795px] md:left-[] flex flex-row md:overflow-auto overflow-auto md:w-auto w-[80%] md:items-center  md:justify-center items-start justify-start md:z-50 md:gap-0 gap-5" >
        


        <button
          onClick={() => handleTabChange('Entradas')}
          className={`tab-button ${
            selectedTab === 'Entradas'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {EntradasIcon(selectedTab === 'Entradas')}
          Entradas
        </button>

        <button
          onClick={() => handleTabChange('Reservas')}
          className={`tab-button ${
            selectedTab === 'Reservas'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {ReservasIcon(selectedTab === 'Reservas')}
          Reservas
        </button>

        <button
          onClick={() => handleTabChange('Listas')}
          className={`tab-button ${
            selectedTab === 'Listas'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {ListasIcon(selectedTab === 'Listas') }
          Listas
        </button>

        <button
          onClick={() => handleTabChange('Control de Aforo')}
          className={`tab-button ${
            selectedTab === 'Control de Aforo'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {ControlAforoIcon(selectedTab === 'Control de Aforo') }
         
          Aforo
        </button>

        <button
          onClick={() => handleTabChange('Crm')}
          className={`tab-button ${
            selectedTab === 'Crm'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {CrmIcon(selectedTab === 'Crm')}
          Crm
        </button>

        <button
          onClick={() => handleTabChange('Roles')}
          className={`tab-button ${
            selectedTab === 'Roles'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {RolesIcon(selectedTab === 'Roles')}
          RRPP
        </button>

        <button
          onClick={() => handleTabChange('Web')}
          className={`tab-button ${
            selectedTab === 'Web'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {WebIcon(selectedTab === 'Web')}
          Web
        </button>

        <button
          onClick={() => handleTabChange('Reporting')}
          className={`tab-button ${
            selectedTab === 'Reporting'
              ? 'w-[100px] flex flex-col h-full items-center justify-center md:text-white text-[#6096B9] font-semibold'
              : 'w-[100px] flex flex-col h-full items-center justify-center md:text-[#E5E7EB] text-gray-500'
          }`}
        >
          {ReportingIcon(selectedTab === 'Reporting')}
          Estadisticas
        </button>
      </div>
      {/* derecha */}
      <button
        className="w-5 h-5 rounded-full border-[1px] border-gray-400 text-gray-600 md:hidden"
        onClick={handleScrollRight}
      >
       <svg data-slot="icon" fill="none" strokeWidth="1.5" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
  <path strokeLinecap="round" strokeLinejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5"></path>
</svg>
      </button>
      </div>

      {/* Contenedor de contenido */}
      <div className="mt-4">
     
        
        {selectedTab === 'Entradas' && <Entradas componentState={componentState} setComponentState={setComponentState}/>}
        {selectedTab === 'Reservas' && <Reservas componentState={componentState} setComponentState={setComponentState}/>}
        {selectedTab === 'Listas' && <Listas componentState={componentState} setComponentState={setComponentState}/>}
        {selectedTab === 'Control de Aforo' && <ControlDeAforo componentState={componentState} setComponentState={setComponentState}/>}
        {selectedTab === 'Crm' && <CRM componentState={componentState} setComponentState={setComponentState}/>}
        {selectedTab === 'Roles' && <Roles componentState={componentState} setComponentState={setComponentState}/>}
        {selectedTab === 'Web' && <Web componentState={componentState} setComponentState={setComponentState}/>}
        {selectedTab === 'Reporting' && <Reporting componentState={componentState} setComponentState={setComponentState}/>}
   </div>
    </main>
  );
};

export default TabsGeneral;